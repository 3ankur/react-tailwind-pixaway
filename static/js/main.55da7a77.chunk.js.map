{"version":3,"sources":["components/ImageCard.js","components/search-input.js","components/videoCard.js","App.js","serviceWorker.js","index.js"],"names":["ImageCard","imageData","searchText","webformatURL","tags","user","views","downloads","likes","tagList","split","className","src","alt","map","item","key","onClick","SearchInput","swtichToVideo","isImage","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","onToggle","VideoCard","videoData","showVideo","setShowVide","videos","picture_id","tiny","videoPicture","updateIt","ev","onMouseOver","onMouseLeave","autoplay","muted","loop","url","App","images","setImages","setVideos","searchTerm","setSearchTerm","setIsImage","lodePage","setLoadePage","loadImages","a","window","fetch","process","res","json","data","nwAr","hits","loadVideos","useEffect","v","image","id","video","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8QAwCeA,MAtCf,YAA+C,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,WACpBC,EAAsDF,EAAtDE,aAAcC,EAAwCH,EAAxCG,KAAMC,EAAkCJ,EAAlCI,KAAMC,EAA4BL,EAA5BK,MAAOC,EAAqBN,EAArBM,UAAWC,EAAUP,EAAVO,MAC9CC,EAAUL,GAAQA,EAAKM,MAAM,MAAQ,GAC3C,OAGI,yBAAKC,UAAU,8CACX,yBAAKA,UAAU,SAASC,IAAKT,EAAcU,IAAI,4BAC/C,yBAAKF,UAAU,aACX,yBAAKA,UAAU,wCAAf,MAA0DN,GAC1D,4BACI,4BACI,2CACCC,GAEL,4BACI,+CACCC,GAEL,4BACI,2CACCC,KAIb,yBAAKG,UAAU,aAEPF,EAAQK,KAAI,SAACC,GACT,OAAQ,0BAAMC,IAAKD,EAAME,QAAS,kBAAIf,EAAWa,IAAOJ,UAAU,2GAA1D,WAAyKI,U,gBCF1LG,MAzBf,YAA4D,IAAtChB,EAAqC,EAArCA,WAAYiB,EAAyB,EAAzBA,cAAeC,EAAU,EAAVA,QAAU,EAC/BC,mBAAS,IADsB,mBAChDC,EADgD,KAC1CC,EAD0C,KAMvD,OACI,yBAAKZ,UAAU,kDACX,0BAAMa,SANG,SAACC,GACdA,EAAEC,iBACFxB,EAAWoB,IAImBX,UAAU,wBAChC,yBAAKA,UAAU,8DACX,2BAAOgB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQlB,UAAU,kHAAkHmB,KAAK,OAAOC,YAAY,yBACnM,4BAAQpB,UAAU,kIAAkImB,KAAK,UAAzJ,WAKJ,kBAAC,IAAD,CACdD,MAAST,EACTY,SAAU,SAACH,GACTV,GAAeU,SC8CJI,MAlEf,YAA+C,IAA1BC,EAAyB,EAAzBA,UAAWhC,EAAc,EAAdA,WAAc,EACTmB,mBAAS,MADA,mBACnCc,EADmC,KACxBC,EADwB,KAElCC,EAA4DH,EAA5DG,OAAQjC,EAAoD8B,EAApD9B,KAAMC,EAA8C6B,EAA9C7B,KAAMC,EAAwC4B,EAAxC5B,MAAOC,EAAiC2B,EAAjC3B,UAAWC,EAAsB0B,EAAtB1B,MAAO8B,EAAeJ,EAAfI,WAC9CC,EAAQF,EAARE,KACDC,EAAY,uCAAmCF,EAAnC,gBACZ7B,EAAUL,EAAKM,MAAM,MAAQ,GAG7B+B,EAAW,SAACC,GAEVN,EADI,SAALM,IAOP,OAGI,yBAAKC,YAAa,kBAAMF,EAAS,SAASG,aAAc,kBAAMH,EAAS,QAAQ9B,UAAU,8CAGhFwB,EACG,yBAAKxB,UAAU,UACX,2BAAOkC,SAAS,OAAOC,OAAK,EAACC,MAAI,GAC7B,4BAAQjB,KAAK,YAAYlB,IAAK2B,EAAKS,QAHlC,yBAAKrC,UAAU,SAASC,IAAK4B,EAAc3B,IAAI,4BAchE,yBAAKF,UAAU,aACX,yBAAKA,UAAU,wCAAf,MAA0DN,GAC1D,4BACI,4BACI,2CACCC,GAEL,4BACI,+CACCC,GAEL,4BACI,2CACCC,KAIb,yBAAKG,UAAU,aAEPF,EAAQK,KAAI,SAACC,GACT,OAAQ,0BAAME,QAAS,kBAAMf,EAAWa,IAAOJ,UAAU,2GAAjD,WAAgKI,UCmBjLkC,MAvEf,WAAgB,IAAD,EAEe5B,mBAAS,IAFxB,mBAEN6B,EAFM,KAEEC,EAFF,OAGe9B,mBAAS,IAHxB,mBAGNgB,EAHM,KAGEe,EAHF,OAIuB/B,mBAAS,IAJhC,mBAINgC,EAJM,KAIMC,EAJN,OAKiBjC,oBAAS,GAL1B,mBAKND,EALM,KAKGmC,EALH,OAMoBlC,mBAAS,GAN7B,mBAMNmC,EANM,KAMIC,EANJ,KAOPC,EAAU,uCAAG,gCAAAC,EAAA,+EAEGC,OAAOC,MAAP,uCAA6CC,qCAA7C,cAAwFT,EAAxF,kCAA4HG,IAF/H,cAETO,EAFS,gBAGIA,EAAIC,OAHR,OAGTC,EAHS,OAIXC,EAJW,sBAIAhB,GAJA,YAIWe,EAAKE,OAC/BhB,EAAUe,GALK,4GAAH,qDAYVE,EAAU,uCAAG,gCAAAT,EAAA,+EAEGC,OAAOC,MAAP,8CAAoDC,qCAApD,cAA+FT,EAA/F,6BAA8HG,IAFjI,cAETO,EAFS,gBAGIA,EAAIC,OAHR,OAGTC,EAHS,OAIXC,EAJW,sBAIA7B,GAJA,YAIW4B,EAAKE,OAC/Bf,EAAUc,GALK,4GAAH,qDAqBhB,OAJAG,qBAAU,WACRjD,EAAUsC,IAAeU,MACxB,CAACf,EAAYjC,EAAQoC,IAGtB,yBAAK7C,UAAU,qBACb,kBAAC,EAAD,CAAaT,WAAY,SAACoB,GAAYgC,EAAchC,GAAOmC,EAAa,GAAIN,EAAU,IAAIC,EAAU,KAAQjC,cAZ5F,SAACmD,GACnBf,EAAWe,GACXb,EAAa,GACbN,EAAU,KASgI/B,QAASA,IACjJ,yBAAKT,UAAU,2EAGXS,EACE8B,EAAOpC,KAAI,SAACyD,GACV,OACE,kBAAC,EAAD,CAAWvD,IAAKuD,EAAMC,GAAItE,WAAY,SAACoB,GAAWgC,EAAchC,GAAOmC,EAAa,GAAIN,EAAU,IAAIC,EAAU,KAAUnD,UAAWsE,OAIzIlC,EAAOvB,KAAI,SAAC2D,GACV,OACE,kBAAC,EAAD,CAAWvE,WAAY,SAACoB,GAAYgC,EAAchC,GAAOmC,EAAa,GAAIL,EAAU,IAAKD,EAAU,KAAQnC,IAAKyD,EAAMD,GAAItC,UAAWuC,QAO/I,yBAAK9D,UAAU,sCACX,4BAAQM,QAAS,kBAAIwC,EAAaD,EAAS,IAAI7C,UAAU,0GAAzD,gBCzDJ+D,EAAcC,QACW,cAA7Bf,OAAOgB,SAASC,UAEe,UAA7BjB,OAAOgB,SAASC,UAEhBjB,OAAOgB,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC1FjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDYnB,SAAkBtB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsB,IAAI1C,0BAAwBF,OAAOgB,SAAS6B,MACpDC,SAAW9C,OAAOgB,SAAS8B,OAIvC,OAGF9C,OAAO+C,iBAAiB,QAAQ,WAC9B,IAAM3B,EAAK,UAAMlB,0BAAN,sBAEPY,IAgEV,SAAiCM,EAAOC,GAEtCpB,MAAMmB,EAAO,CACX4B,QAAS,CAAE,iBAAkB,YAE5BvB,MAAK,SAAAwB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM7B,MAAK,SAAAC,GACjCA,EAAa6B,aAAa9B,MAAK,WAC7BzB,OAAOgB,SAASwC,eAKpBrC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAuB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OClC/BE,K","file":"static/js/main.55da7a77.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ImageCard({ imageData, searchText }) {\n    const { webformatURL, tags, user, views, downloads, likes } = imageData;\n    const tagList = tags && tags.split(',') || []\n    return (\n\n        \n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\n            <img className=\"w-full\" src={webformatURL} alt=\"Sunset in the mountains\" />\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold  text-red-400 text-xl mb-2\">by {user}</div>\n                <ul>\n                    <li>\n                        <strong>Views: </strong>\n                        {views}\n                    </li>\n                    <li>\n                        <strong>Downloads: </strong>\n                        {downloads}\n                    </li>\n                    <li>\n                        <strong>Likes: </strong>\n                        {likes}\n                    </li>\n                </ul>\n            </div>\n            <div className=\"px-6 py-4\">\n                {\n                    tagList.map((item) => {\n                        return (<span key={item} onClick={()=>searchText(item)} className=\"cursor-pointer inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">{`#${item}`}</span>);\n                    })\n                }\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default ImageCard;","import React,{useState} from \"react\";\nimport ToggleButton from 'react-toggle-button';\n\nfunction SearchInput({searchText, swtichToVideo, isImage}) {\n    const [text, setText] = useState('');\n    const onSubmit = (e) => {\n        e.preventDefault();\n        searchText(text);\n    }\n    return (\n        <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\n            <form onSubmit={onSubmit} className=\"w-full max-w-sm flex\">\n                <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n                    <input onChange={e => setText(e.target.value)} className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" placeholder=\"Search Image Term...\" />\n                    <button className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">\n                        Search\n          </button>\n          \n                </div>\n                <ToggleButton\n  value={  isImage }\n  onToggle={(value) => {\n    swtichToVideo(!value)\n  }} />\n            </form>\n        </div>\n    )\n}\nexport default SearchInput;","import React, { useState } from \"react\";\n\nfunction VideoCard({ videoData, searchText }) {\n    const [showVideo, setShowVide] = useState(null);\n    const { videos, tags, user, views, downloads, likes, picture_id } = videoData;\n    const {tiny} = videos;\n    const videoPicture = `https://i.vimeocdn.com/video/${picture_id}_295x166.jpg`\n    const tagList = tags.split(',') || []\n\n\n    const updateIt = (ev) => {\n        if(ev==='over'){\n            setShowVide(true);\n        }else{\n            setShowVide(false);\n        }\n    }\n\n    return (\n\n\n        <div onMouseOver={() => updateIt('over')} onMouseLeave={() => updateIt('out')} className=\"max-w-sm rounded overflow-hidden shadow-lg\">\n\n            {\n                !showVideo ? <img className=\"w-full\" src={videoPicture} alt=\"Sunset in the mountains\" /> :\n                    <div className=\"w-full\">\n                        <video autoplay=\"true\" muted loop >\n                            <source type=\"video/mp4\" src={tiny.url} />\n                        </video>\n                    </div>\n            }\n\n\n\n\n\n\n\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold  text-red-400 text-xl mb-2\">by {user}</div>\n                <ul>\n                    <li>\n                        <strong>Views: </strong>\n                        {views}\n                    </li>\n                    <li>\n                        <strong>Downloads: </strong>\n                        {downloads}\n                    </li>\n                    <li>\n                        <strong>Likes: </strong>\n                        {likes}\n                    </li>\n                </ul>\n            </div>\n            <div className=\"px-6 py-4\">\n                {\n                    tagList.map((item) => {\n                        return (<span onClick={() => searchText(item)} className=\"cursor-pointer inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">{`#${item}`}</span>);\n                    })\n                }\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default VideoCard;","import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport SearchInput from './components/search-input';\nimport VideoCard from './components/videoCard';\n\n\nfunction App() {\n\n  const [images, setImages] = useState([]);\n  const [videos, setVideos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isImage, setIsImage] = useState(true);\n  const [lodePage, setLoadePage] = useState(1);\n  const loadImages = async () => {\n    try {\n      const res = await window.fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${searchTerm}&image_type=photo&page=${lodePage}`);\n      const data = await res.json();\n      let nwAr = [...images, ...data.hits]\n      setImages(nwAr);\n    } catch (e) {\n\n    }\n\n  }\n\n  const loadVideos = async () => {\n    try {\n      const res = await window.fetch(`https://pixabay.com/api/videos/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${searchTerm}&pretty=true&page=${lodePage}`);\n      const data = await res.json();\n      let nwAr = [...videos, ...data.hits]\n      setVideos(nwAr);\n    } catch (e) {\n\n    }\n  }\n\n  const toggleVideo = (v) => {\n    setIsImage(v)\n    setLoadePage(1);\n    setImages([]);\n  }\n\n  useEffect(() => {\n    isImage ? loadImages() : loadVideos();\n  }, [searchTerm, isImage,lodePage])\n\n  return (\n    <div className=\"container mx-auto\">\n      <SearchInput searchText={(text) =>  { setSearchTerm(text); setLoadePage(1); setImages([]);setVideos([]); }} swtichToVideo={toggleVideo} isImage={isImage} />\n      <div className=\"grid  gap-4 sm:grid-cols-1 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-3\">\n        {\n\n          isImage ?\n            images.map((image) => {\n              return (\n                <ImageCard key={image.id} searchText={(text) => { setSearchTerm(text); setLoadePage(1); setImages([]);setVideos([]); } }  imageData={image} />\n              )\n            }) :\n\n            videos.map((video) => {\n              return (\n                <VideoCard searchText={(text) =>  { setSearchTerm(text); setLoadePage(1); setVideos([]); setImages([]); }} key={video.id} videoData={video} />\n              )\n            })\n        }\n\n        \n      </div>\n      <div className=\"inset-x-0.bottom-0 p-4 text-center\">\n          <button onClick={()=>setLoadePage(lodePage+1)} className=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\">\n            Load more\n</button>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}